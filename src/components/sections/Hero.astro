---
import { basics } from '@cv'
import Section from '@/components/Section.astro'
import { Icon } from 'astro-icon/components'

const { name, label, image, location, profiles, email } = basics
const { city, region, address } = location
---

<Section>
  <div class="min-w-[275px]">
    <section
      id="about"
      aria-label="About me"
      class="group col-span-2 flex gap-2 h-full w-full rotate-0 sm:-rotate-2 flex-col rounded-3xl bg-skin-muted sm:bg-skin-button-muted p-4 transition-all sm:hover:rotate-0 sm:hover:bg-skin-muted"
    >
      <div
        class="flex items-center text-center"
      >
        <figure class='print:hidden'>
          <img
            class='scale-110 sm:grayscale sm:scale-100 transition-all sm:group-hover:scale-110 sm:group-hover:grayscale-0'
            height={600}
            width={600}
            src={image}
            alt={`Profile of ${name}`}
            loading='eager' />
        </figure>
        <div class="flex flex-col items-center">
          <h1 class="font-medium sm:text-inherit sm:group-hover:text-skin-hue">{name}</h1>
          <h2 class="font-medium sm:text-inherit sm:group-hover:text-skin-hue">{label}</h2>
        </div>
      </div>
      <div class='flex items-center gap-2 pt-2 text-sm text-skin-muted w-full md:col-span-2'>
        <Icon class='print:hidden sm:group-hover:text-skin-hue' name='mdi:world' width={20} height={20} />
        {address}, {city}, {region}
      </div>
    </section>
  </div>
  <div class='flex flex-col-reverse gap-8'>
    <div class='info'>
      <footer class='print:hidden'>
        {
          email && (
            <a
              href={`mailto:${email}`}
              title='Send me an email'
              target='_blank'
              aria-label='Send me an email'
              rel='noopener noreferrer'>
              <Icon
                class='print:hidden'
                name='mdi:email'
                width={20}
                height={20}
              />
            </a>
          )
        }
        {
          profiles.map(({ network, url, icon }) => {
            return (
              <a
                href={url}
                title={`Visit ${name} profile on ${network}`}
                aria-label={`Visit ${name} profile on ${network}`}
                target='_blank'
                class='print:hidden'
                rel='noopener noreferrer'>
                <Icon class='print:hidden' name={icon} width={20} height={20} />
              </a>
            )
          })
        }
        <div
          class='footer-button group flex h-8 w-9 cursor-pointer items-center justify-center rounded-md text-skin-hue hover:bg-skin-button-accent hover:text-skin-inverted max-sm:hidden print:hidden [&>span]:hover:text-skin-inverted transition-all duration-500 ease-linear'>
          <Icon name='ri:command-fill' class='h-5 w-5' />
        </div>
      </footer>
    </div>
  </div>
</Section>

<style>
  .info {
    @apply flex flex-col gap-1 pr-8 print:gap-0 print:pr-0;
  }

  h1 {
    @apply text-4xl font-bold print:text-3xl;
  }

  h2 {
    @apply text-balance text-base text-skin-muted print:text-lg;
  }

  img {
    @apply aspect-square w-32 rounded-2xl bg-cover;
  }

  span {
    @apply flex items-center gap-1 text-xs text-skin-hue;
  }

  footer {
    @apply mt-2 flex gap-1 text-sm;
  }

  footer a,
  footer button {
    @apply inline-flex size-8 items-center justify-center rounded-md p-1 text-skin-hue transition-all duration-500 ease-linear hover:bg-skin-button-accent hover:text-skin-inverted;
  }

  @media (width <= 700px) {
    .container {
      flex-direction: column-reverse;
    }

    .info {
      @apply pr-0 md:items-center md:justify-center;
    }

    figure {
      @apply flex md:items-center md:justify-center;
    }

    h2 {
      text-wrap: balance;
    }

    figure {
      @apply md:mx-auto;
    }
  }
</style>

<script>
  const select = document.getElementById('themeSwitch') as HTMLSelectElement
  const theme = localStorage.getItem('theme')
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches
    ? 'dark'
    : 'light'

  if (theme !== null) {
    select.value = theme
  } else {
    select.value = systemTheme
  }

  function updateTheme(value: string) {
    const theme = value === 'system' ? systemTheme : value
    document.documentElement.classList.remove('light', 'dark')
    document.documentElement.classList.add(theme)
    localStorage.setItem('theme', value)
  }

  updateTheme(select.value)

  select.addEventListener('change', (event: Event) => {
    const select = event.target as HTMLSelectElement
    updateTheme(select.value)
  })

  // Desable dark mode before printing
  window.addEventListener('beforeprint', () => {
    document.documentElement.classList.remove('dark')
  })

  // Restore dark mode after printing
  window.addEventListener('afterprint', () => {
    if (
      select.value === 'dark' ||
      (select.value === 'system' && systemTheme === 'dark')
    ) {
      document.documentElement.classList.add('dark')
    }
  })
</script>
